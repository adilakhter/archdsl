package client;
      
import edu.uci.isr.myx.fw.*;
import java.util.*;
import java.util.concurrent.atomic.AtomicReference;

public abstract class ChatClient_AutoGenerated extends  AbstractMyxSimpleBrick{ 
    //generated end-point MYX NAME
    public static final IMyxName INTERFACE_NAME_OUTGOING_chat =  MyxUtils.createName("chat");
    public static final IMyxName INTERFACE_NAME_INCOMING_in =  MyxUtils.createName("in");
    
    //generated end-point instances
    protected ArrayList<IChat> chatOutgoingEndpointImplementations;
    protected IChatEv inIncomingEndpointImplementation;
    
         
    public ChatClient_AutoGenerated(){
        //(Auto-generated):  Default constructor
        this.chatOutgoingEndpointImplementations = new ArrayList<IChat>(); 
        
        
        this.inIncomingEndpointImplementation = get_inIncomingEndpointImplementation();
        verifyIsNotNull("inIncomingEndpointImplementation" , inIncomingEndpointImplementation); 
        
    }
    
    public ChatClient_AutoGenerated(Properties props){
        //TODO (Auto-generated):   constructor
    }
    
    @SuppressWarnings("unchecked")
    private <T>  void configureOutgoingEndpoint(IMyxName myxName, ArrayList<T> endpointImpls)
    {
        Object [] objs = MyxUtils.getRequiredServiceObjects(this, myxName);
        if ( objs != null)
        {   
            for ( Object obj : objs)
            {
                endpointImpls.add((T)obj);
            }
        }
    }
    //incoming end-points setup methods
    
    /**
     * Gets and initialises inIncomingEndpointImplementation endpoint's concrete implementation   
     * so that it can be returned by the getServiceObject.
     * By default inIncomingEndpointImplementation , which cause RuntimeException
     * if not properly initialized. 
     */
     protected abstract IChatEv get_inIncomingEndpointImplementation();
    
    
    protected <T> void verifyIsNotNull(String interaceNameString, T interfaceImplementation)
    {
        if  ( interfaceImplementation  == null)
            throw new RuntimeException (interaceNameString + " is Null. Please assign your implementation by overriding configureIncomingEndpoint method." ); 
    }
     
    @Override
    public void begin(){
        //TODO (Auto-generated):  Add initialization codes
        configureOutgoingEndpoint(INTERFACE_NAME_OUTGOING_chat, this.chatOutgoingEndpointImplementations);  
        
        
    }
    @Override
    public void end(){
        //(Auto-generated): Add cleanup codes
        //(Auto-generated): Dispose unmanaged resources
    }
    
    @Override
    public Object getServiceObject(IMyxName name) {
        //(Auto-generated): Add your code here
        
        if(name.equals(INTERFACE_NAME_INCOMING_in)){
          if(inIncomingEndpointImplementation == null){
              throw new RuntimeException("inIncomingEndpointImplementation is Null . Please initialize in_Impl with Service(/ServiceProxy) .");
          }
          return inIncomingEndpointImplementation;
        } 
        
        return null;
    }
}
